#	Built by Emanuele Giacomini
# Need to install newest version of arm-none-eabi
# Please type in the terminal: sudo apt install libnewlib-dev libnewlib-arm-none-eabi

#Name of PRoJect
PRJNAME=main

MCU=mk20dx256

#$(info Project Name: $(PRJNAME))

PREFIX=..
#Headers directory
DINC=$(PREFIX)/include
#Source directory
DSRC=$(PREFIX)/src
#Build directory
DBUILD=$(DSRC)/build

DIR_ARDUINO=/home/emanuele/.local/share/umake/ide/arduino
TEENSYCORE=$(DIR_ARDUINO)/hardware/teensy/avr/cores/teensy3
#$(info [Computed] Teensy Core Directory: $(TEENSYCORE))

# Source files from teensy core folder
_TEENSYLIBS=memset.S  \
analog.c  \
eeprom.c  \
keylayouts.c  \
math_helper.c \
mk20dx128.c \
nonstd.c  \
pins_teensy.c \
ser_print.c \
serial1.c \
serial2.c \
serial3.c \
serial4.c \
serial5.c \
serial6.c \
serial6_lpuart.c  \
touch.c \
usb_desc.c  \
usb_dev.c \
usb_joystick.c  \
usb_keyboard.c  \
usb_mem.c \
usb_midi.c  \
usb_mouse.c \
usb_mtp.c \
usb_rawhid.c  \
usb_seremu.c  \
usb_serial.c  \
usb_touch.c \
AudioStream.cpp \
DMAChannel.cpp  \
EventResponder.cpp  \
HardwareSerial1.cpp \
HardwareSerial2.cpp \
HardwareSerial3.cpp \
HardwareSerial4.cpp \
HardwareSerial5.cpp \
HardwareSerial6.cpp \
IPAddress.cpp \
IntervalTimer.cpp \
Print.cpp \
Stream.cpp  \
Tone.cpp  \
WMath.cpp \
WString.cpp \
avr_emulation.cpp \
new.cpp \
usb_audio.cpp \
usb_flightsim.cpp \
usb_inst.cpp  \
yield.cpp 
#$(info [Computed] Core libraries $(_TEENSYLIBS))

							
TEENSYLIBS=$(addprefix $(TEENSYCORE)/, $(_TEENSYLIBS))
COREOBJS=$(addprefix $(DBUILD)/, $(addsuffix .o, $(_TEENSYLIBS)))
#$(info [Computed] Teensy libs: $(COREOBJS))

#-------# COMPILER STUFF #-----------------------------------------------#
CNAME = arm-none-eabi-

CC=$(CNAME)gcc
#$(info [Computed] CC: $(CC))
CFLAGS= -c -O2 -g -Wall -ffunction-sections -nostdlib -MMD \
        -fno-exceptions	\
        -mthumb -mcpu=cortex-m4 -fsingle-precision-constant	\
        -D__MK20DX256__ -DF_CPU=72000000 -DUSB_SERIAL -DLAYOUT_US_ENGLISH	\
#Include directories
CFLAGS+= -I$(TEENSYCORE) -I$(DINC) -I./
#$(info [Computed] CFLAGS: $(CFLAGS))

LD=$(CNAME)ld
LDFLAGS= -O2 -Wl,--gc-sections,--relax "-T$(TEENSYCORE)/mk20dx256.ld"
LDFLAGS+= -lstdc++  -mthumb -mcpu=cortex-m4 -fsingle-precision-constant "-I$(TEENSYCORE)/"
LDFLAGS+= -lm

AR=$(CNAME)gcc-ar
ARFLAGS=rcs

OBJCOPY=$(CNAME)objcopy
OBJFLAGS= -R .eeprom -R .fuse -R .lock -R .signature

# Dependencies in include dir
ifndef _DEPS
_DEPS=$(notdir $(wildcard $(DINC)/*.h))
#$(info [Computed] Dependencies: $(_DEPS))
else
#$(info [User] Dependencies: $(_DEPS))
endif
DEPS=$(addprefix $(DINC)/, $(_DEPS))

# Objects in /build dir
ifndef _OBJS
USRFNCT=$(notdir $(wildcard $(DSRC)/*.c))
_OBJS:=$(addsuffix .o, $(USRFNCT))
$(info [Computed] User made functions: $(_OBJS))
else
$(info [User] User made functions: $(_OBJS))
endif
OBJS:=$(addprefix $(DBUILD)/, $(_OBJS))
#-------# RULES #--------------------------------------------------------#
dir_guard=@mkdir -p build/

all:$(DBUILD)/$(PRJNAME).ihex

$(DBUILD)/$(PRJNAME).ihex: $(DBUILD)/$(PRJNAME).elf
	@echo
	$(OBJCOPY) $(OBJFLAGS)  -O ihex $< $@
	teensy_loader_cli -mmcu=$(MCU) -w -v $@


$(DBUILD)/$(PRJNAME).elf: $(DBUILD)/core.a $(OBJS)
	$(CC) $(LDFLAGS) -o $@ $^

#Core building rules
$(DBUILD)/core.a:	$(COREOBJS)
	$(info Building Core...)
	$(AR) $(ARFLAGS) $@ $^

$(COREOBJS): $(DBUILD)/%.o: $(TEENSYLIBS)
	$(dir_guard)
	$(CC) $(CFLAGS) -o $@ $(TEENSYCORE)/$*

#User made functions rules
$(OBJS): $(DBUILD)/%.o: $(DSRC)/$(USRFNCT)
	$(dir_guard)
	$(info Compiling user made files...)
	$(CC) $(CFLAGS) -o $@ $*

.PHONY: clean
clean:
	rm -rf $(DBUILD)
